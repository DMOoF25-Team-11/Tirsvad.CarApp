---
config:
  layout: elk
---
classDiagram
direction TB
    class DbSqliteHnd {
	    - _instance: DbSqliteHnd?
	    - _lock: object
	    - _dbConnectionString: string
	    + Instance: DbSqliteHnd
	    + Connection: IDbConnection
	    - DbSqliteHnd(dbPath: string)
	    - InitializeDatabase(dbPath: string) : void
	    - CreateDb(connection: IDbConnection) : void
	    - CreateMigrationVersionTable(connection: IDbConnection) : void
	    - GetCurrentVersion(connection: IDbConnection) : int
	    - UpdateCurrentVersion(connection: IDbConnection, version: int) : void
	    - ApplyMigrations(connection: IDbConnection) : void
	    - GetMigrationFiles() : IEnumerable
	    + GetCars() : IEnumerable
	    + GetFuelTypes() : IEnumerable
	    + GetFuelType(id: int) : FuelType?
	    + AddCar(car: Car) : void
	    + DeleteCar(car: Car) : void
	    + UpdateCar(car: Car) : void
	    + AddFuelType(fuelType: FuelType) : void
	    + ImportFromJson() : void
	    + ExportToJson() : void
    }
    class Car {
	    + Brand: string
	    + Model: string
	    + Year: uint
	    + GearType: char
	    + FuelTypeId: int
	    + FuelEfficiency: float
	    + Mileage: uint
	    + Description: string
	    + IsEngineRunning: bool
	    + Id: int
	    + IsPalindrome(car: Car) : bool
	    + CalculateFuelNeeded(car: Car, km: int) : double
	    + CalculateTripCost(car: Car, fuelNeeded: double) : double
	    + ToggleEngine() : void
	    + UpdateMileAge(km: int) : void
    }
    class FuelType {
	    + Id: int
	    + Name: string
	    + Price: float
    }
    class Program {
	    - _dbSqliteHndInstance: DbSqliteHnd
	    - FirstAutomobileYear: uint
	    + InputCar() : Car
	    + SelectCar() : Car?
	    + PrintCarDetails(cars: IEnumerable) : void
	    + TripCost(car: Car) : void
	    + CreateTableFrameH(columns: List) : void
	    + Header(text: string) : void
	    + CenterString(text: string, width: int) : string
	    + PrintError(message: string) : void
	    - Menu() : void
	    - MenuDatabase() : void
	    + Main() : void
    }
    class JsonFileHandler {
	    + ImportData(fileName: string) : DataContainer?
	    + ExportData(fileName: string, data: DataContainer) : void
    }
    class JsonFileHandler.DataContainer {
	    + Cars: List
	    + FuelTypes: List
    }
    class Constants {
	    + dbSqliteFileName: string
	    + dbSqliteCreateDbFileName: string
	    + jsonFileName: string
    }
    class JsonFileHandler.DataContainer {
    }

    Program -- DbSqliteHnd : uses
    Program -- Car : uses
    Program -- FuelType : uses
    DbSqliteHnd -- Car : uses
    DbSqliteHnd -- FuelType : uses
    JsonFileHandler -- Car : uses
    JsonFileHandler -- FuelType : uses
    JsonFileHandler -- JsonFileHandler.DataContainer : uses
    JsonFileHandler -- UntitledClass
